package io.javabrains.course;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class TopicService {
	
	@Autowired
	private CourseRepository topicRepository;
	
//	private List<Topic> topics = new ArrayList<>(Arrays.asList(
//			new Topic("java", "Java course", "Spring boot description"),
//			new Topic("javascript", "JavaScript course", "NodeJS description"),
//			new Topic("csharp", "C# course", "ASP.NET description")
//			)); 
	
	
	public List<Course> getAllTopics() {
		//return topics;
		List<Course> topics = new ArrayList<>();
		topicRepository.findAll().forEach(topics::add);
		return topics;
	}
	
	public Optional<Course> getTopic(String id) {
		//return topics.stream().filter(t -> t.getId().equals(id)).findFirst().get();
		return topicRepository.findById(id);
	}

	public void addTopic(Course topic) {
		//topics.add(topic);
		topicRepository.save(topic);
	}

	public void updateTopic(Course topic, String id) {		
		topicRepository.save(topic);

//		for(int i=0 ; i<topics.size() ; i++) {
//			Topic t = topics.get(i);
//			if(t.getId().equals(id)) {
//				topics.set(i, topic);
//				return;
//			}
//		}
	}

	public void deleteTopic(String id) {
		//topics.removeIf(t -> t.getId().equals(id));
		topicRepository.deleteById(id);

	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
